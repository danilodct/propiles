<?xml version="1.0" encoding="UTF-8"?>
<project name="sistema" default="war" basedir=".">
	
	<property name="appName" value="sistema"/>  
	<property name="buildDir" value="build/classes"/>  
	<property name="buildDir.javadocDir" value="build/doc"/>  
	<property name="buildDir.testeDir" value="build/test-classes"/>  
	<property name="webRoot" value="WebContent"/>  
	<property name="web.xml" value="${webRoot}/WEB-INF/web.xml"/>  
	<property name="srcDir" value="JavaSource"/>  
	<property name="testSrcDir" value="TestSource"/>  
	<property name="testReport" value="testReport"/>  
	<property name="junit" value="WEB-INF/lib/junit-4.0.jar"/>  
	<property name="jMock" value="WEB-INF/lib/jmock-2.5.1.jar"/>  
	<property name="jMock-JUnit" value="WEB-INF/lib/jmock-junit4-2.5.1.jar"/>  
	<property name="hamcrest-core" value="WEB-INF/lib/hamcrest-core-1.1.jar"/>  
	<property name="hamcrest-library" value="WEB-INF/lib/hamcrest-library-1.1.jar"/>  
	<property name="mysql" value="WEB-INF/lib/mysql-connector-java-5.0.4-bin.jar"/>  
	<property name="hibernate" value="WEB-INF/lib/hibernate3.jar"/>  
	<property name="dom4" value="WEB-INF/lib/dom4j-1.6.1.jar"/>  
	<property name="slf4j" value="WEB-INF/lib/slf4j-log4j12-1.5.2.jar"/>  
	<property name="slf4j-api" value="WEB-INF/lib/slf4j-api-1.5.2.jar"/>  
	<property name="slf4j-log" value="WEB-INF/lib/slf4j-log4j12-1.5.2.jar"/>  
	<property name="log4j" value="WEB-INF/lib/log4j-1.2.15.jar"/>  
	<property name="commons-collections" value="WEB-INF/lib/commons-collections-3.1.jar"/>  
	<property name="javassist" value="WEB-INF/lib/javassist-3.4.GA.jar"/>  
	<property name="jta" value="WEB-INF/lib/jta-1.1.jar"/>  
	<property name="antlr" value="WEB-INF/lib/antlr-2.7.6.jar"/>  
	<property name="tomcatHome" value="/Tomcat"/>  
	<property name="servlet" value="C:/apache-tomcat-6.0.18/lib/servlet-api.jar"/>  
	<property name="xwork" value="WEB-INF/lib/xwork-2.0.7.jar"/>  
	<property name="ognl" value="WEB-INF/lib/ognl-2.6.11.jar"/>  
	<property name="commonsLoggin" value="WEB-INF/lib/commons-logging-1.0.4.jar"/>  
	<property name="struts2" value="WEB-INF/lib/struts2-core-2.0.14.jar"/>  
	<property name="warFile" value="${appName}.war"/>  
	
	
	<path id="classpath">    
		<pathelement path="${servlet}"/>   
	</path>
	
	<target name="all" depends="test,javadoc,war"   description="runs test, javadoc and war"/>
	
	<target name="clean" description="deletes all generated files">
		<delete dir="${buildDir}" />
		<delete dir="${buildDir.javadocDir}" />
		<delete>      
			<fileset dir="${testReport}" />
		</delete>  
	</target>
	
	<target name="compile" depends="prepare" description="compiles source files">    
		<javac srcdir="${srcDir}" destdir="${buildDir}" classpathref="classpath" />
		<copy file="${resourceDir}/queries.properties" todir="${buildDir}/${hierarquiaPastas}/resources" />
		<copy file="${resourceDir}/insert_db_test.sql" todir="${buildDir}/${hierarquiaPastas}/resources" />
		<copy file="${resourceDir}/meantime_schema.sql" todir="${buildDir}/${hierarquiaPastas}/resources" />
	</target>
	
	<target name="dtd" description="generates a DTD for Ant build files">    
		<antstructure output="build.dtd"/>
	</target>
	
	<target name="javadoc" depends="compile"   description="generates javadoc from all .java files">    
		<javadoc sourcepath="${srcDir}" destdir="${buildDir.javadocDir}"  packagenames="com.oje.servidorJogoMestre.*" classpathref="classpath"/>  
	</target>
	
	 <target name="prepare" depends="clean" description="creates output directories">    
	 	<mkdir dir="${buildDir}"/>    
	 	<mkdir dir="${buildDir.javadocDir}"/>  
	 	<mkdir dir="${testReport}"/>  
	 </target>
	 
	<target name="test" depends="" description="runs all JUnit tests">    
		<delete>      
			<fileset dir="${testReport}">        
				<include name="TEST-*.txt"/> 
			</fileset>    
		</delete>    
		<junit printsummary="yes">      
			<classpath>
				<pathelement location="${webRoot}/${commonsLoggin}"/>
				<pathelement location="${webRoot}/${xwork}"/>
				<pathelement location="${webRoot}/${ognl}"/>
				<pathelement location="${webRoot}/${junit}"/>
				<pathelement location="${webRoot}/${jMock}"/>
				<pathelement location="${webRoot}/${jMock-JUnit}"/>
				<pathelement location="${webRoot}/${hamcrest-core}"/>
				<pathelement location="${webRoot}/${hamcrest-library}"/>
				<pathelement location="${webRoot}/${mysql}"/>
				<pathelement location="${webRoot}/${hibernate}"/>
				<pathelement location="${webRoot}/${dom4}"/>
				<pathelement location="${webRoot}/${slf4j-api}"/>
				<pathelement location="${webRoot}/${slf4j-log}"/>
				<pathelement location="${webRoot}/${log4j}"/>
				<pathelement location="${webRoot}/${commons-collections}"/>
				<pathelement location="${webRoot}/${javassist}"/>
				<pathelement location="${webRoot}/${jta}"/>
				<pathelement location="${webRoot}/${antlr}"/>
				<pathelement location="${webRoot}/${struts2}"/>
				<pathelement location="${buildDir}"/>
				<pathelement location="${buildDir.testeDir}"/>
			</classpath>
			<formatter type="brief"/> 
			<batchtest todir="${testReport}">        
				<fileset dir="${testSrcDir}">
					<exclude name="**/FileReaderTest.java"/>
					<exclude name="**/TesteBasico.java"/>
				</fileset>        
			</batchtest>
		</junit>  
	</target>
	
	<target name="war" depends="" description="builds the war file">    
		<war warfile="${warFile}" webxml="${web.xml}">      
			<classes dir="${buildDir}" />
			<fileset dir="${webRoot}">
				<exclude name="${junit}" />
				<exclude name="${jMock}" />
				<exclude name="${jMock-JUnit}" />
				<exclude name="${hamcrest-core}" />
				<exclude name="${hamcrest-library}" />
				<exclude name="${buildDir.testeDir}" />
			</fileset>
		</war>  
	</target>
	
</project>